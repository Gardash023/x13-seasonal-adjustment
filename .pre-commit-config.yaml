# Pre-commit hooks for X13 Seasonal Adjustment
# Install: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: ["--line-length=88"]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--line-length=88"]

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ["--max-line-length=88", "--extend-ignore=E203,W503"]
        additional_dependencies: [
          flake8-docstrings,
          flake8-typing-imports,
          flake8-bugbear
        ]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports]
        additional_dependencies: [
          types-requests,
          pandas-stubs,
          types-setuptools
        ]

  # Security scanning
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ["-r", "src/", "-f", "custom", "--skip", "B101,B601"]

  # General pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # File formatting
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [--fix=lf]

      # File validation
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-toml
      - id: check-json
      - id: check-xml

      # Python validation
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first
      - id: debug-statements

      # Git validation
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: check-case-conflict

      # Other validation
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Documentation
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        additional_dependencies: [toml]

  # Upgrade syntax for newer Python versions
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: [--py38-plus]

  # Notebook cleaning (if using Jupyter notebooks)
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.1
    hooks:
      - id: nbqa-black
        args: [--line-length=88]
      - id: nbqa-isort
        args: [--profile=black]
      - id: nbqa-flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503]

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, markdown, json]
        exclude: ^(CHANGELOG\.md|\.github/workflows/.*)$

  # Spelling checker
  - repo: https://github.com/crate-ci/typos
    rev: v1.16.26
    hooks:
      - id: typos
        exclude: ^(\.git/|build/|dist/|\.eggs/|.*\.egg-info/)

  # License headers
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.4
    hooks:
      - id: insert-license
        files: \.py$
        args:
          - --license-filepath
          - .license-header.txt
          - --comment-style
          - "#"

# Configuration for specific hooks
default_language_version:
  python: python3.11

# Exclude certain files/directories
exclude: |
  (?x)^(
      build/|
      dist/|
      \.eggs/|
      .*\.egg-info/|
      \.git/|
      \.mypy_cache/|
      \.pytest_cache/|
      \.tox/|
      __pycache__/|
      docs/_build/
  )$

# Define stages for different commit types
default_stages: [commit]

# Hook-specific configurations
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
